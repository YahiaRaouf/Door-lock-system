#ifndef UART_H_
#define UART_H_

#include "std_types.h"

typedef unsigned long UART_BaudRateType;

typedef enum {
	FIVE, SIX, SEVEN, EIGHT
} UART_BitDatatType;

typedef enum {
	DISABLED, EVEN = 2, ODD
} UART_ParityType;

typedef enum {
	SINGLE, DOUBLE
} UART_StopBitType;

typedef struct {
	UART_BitDatatType bit_data;
	UART_ParityType parity;
	UART_StopBitType stop_bit;
	UART_BaudRateType baud_rate;
} UART_ConfigType;

/*
 * Function responsible for initializing the UART peripheral
 * 1. Setup the Frame format like number of data bits, parity bit type and number of stop bits.
 * 2. calculate baud rate.
 * 3. Enable transmitting and receiving
 */

void UART_init(const UART_ConfigType *Config_Ptr);

/*
 * Functional responsible for send byte to another UART device.
 */
void UART_sendByte(const uint8 data);

/*
 * Functional responsible for receive byte from another UART device.
 */
uint8 UART_recieveByte(void);

/*
 * Send the required string through UART to the other UART device.
 */
void UART_sendString(const uint8 *Str);

/*
 * Receive the required string until the '#' symbol through UART from the other UART device.
 */
void UART_receiveString(uint8 *Str); // Receive until #

#endif
